*Полиморфизм*

1) Полиморфизм – это способность программы идентично использовать объекты наследующиеся
от одного родителя или с одинаковым интерфейсом без информации о конкретном типе этого
объекта.

1.1) Еще определение попроще - способность метода обрабатывать данные разных типов.

1.2) Подробнее - классы в java стоит представлять как заранее написанные чертежи по
которым уже создаются объекты. Интерфейс стоит понимать как поведенческую
характеристику которую мы присваиваем тому или иному объекту. Полиморфизм в java
позволяет программе обрабатывать объекты с одинаковым интерфейсом т.е. с одинаковыми
поведенческими характеристиками или с одинаковым родителем.

3) Важно понимать, что при работе с кодом мы можем использовать не только объекты типа,
который мы назначили при объявлении, но и его наследников.

3) ad-hoc (полиморфизм по запросу) - перегрузка методов (overloading) это проявление
полиморфизма.

4) Параметрический (истинный полиморфизм) - переопределение методов (overriding)
родителя это проявление полиморфизма. Если параметр функции - базовый класс, значит
любой наследник может прийти туда и быть обработанным.

5) Наследование позволяет одному классу приобретать свойства и атрибуты другого, а
полиморфизм использует унаследованные свойства для выполнения различных задач.

6) Построение и проектирование иерархии объектов на основе интерфейсов и наследовании
классов является обязательным условием для выполнения принципа полиморфизма ООП.

7) Для того, чтобы не нарушался принцип полиморфизма, в базовых классах методы не
должны быть static, private и final.

8) Полиморфизм позволяет объединять объекты с общим типом или поведением в одну
коллекцию или массив и управлять ими единообразно